#!/usr/bin/python3

from colorama import Fore, Style
import image
import time
import sys
import os

def init():
    os.system('clear')

    image.printImage()
    isRunning = True

    toolchain_addict = []
    project_name = ''

    while isRunning:
        cmd = input('> ')
        cmd_list = cmd.split()
        if cmd_list[0] == 'runpy':
            if cmd_list[1] == 'buildozer':
                if cmd_list[2] == '-config':
                    os.system('buildozer init')
            if cmd_list[1] == 'toolchain':
                if cmd_list[2] == '-config':
                    os.system('touch toolchain-addict.conf')

        elif cmd_list[0] == 'foxapi':
            if cmd_list[1] == 'xcode-select':
                if cmd_list[2] == '-update':
                    if cmd_list[3] == 'cython':
                        print(Fore.WHITE)
                        print('Updating cython...', Style.BRIGHT)
                        time.sleep(5)
                        print('Copying to sdk...')
                        time.sleep(3)
                        print(Fore.GREEN)
                        print('DONE!', Style.BRIGHT)
                        print(Fore.WHITE)
                elif cmd_list[2] == '-setconf':
                    if cmd_list[3] == '-f':

                        tc = open(cmd_list[4], 'r')

                        for line in tc:
                            toolchain_addict.append(line.strip())
                        
                        tc.close()

                        print(Fore.WHITE)
                        print('Setting up toolchain addictions...', Style.BRIGHT)
                        time.sleep(7)
                        print(Fore.GREEN)
                        print('DONE!', Style.BRIGHT)
                        print(Fore.WHITE)
                elif cmd_list[2] == '-create':
                        os.system('python3 ~/foxhunt/kivy-ios/toolchain.py create ' + cmd_list[3] + ' ' + cmd_list[4])
            elif cmd_list[1] == 'neovim':
                os.system('nvim ' + cmd_list[2])
            elif cmd_list[1] == 'xcode-build':
                if cmd_list[2] == '-swiftsdk':
                    if cmd_list[3] == '-project':
                        if cmd_list[5] == '-ipa':
                            print(Fore.GREEN)
                            print('Creating xcode archive...', Style.BRIGHT)
                            print(Fore.WHITE)
                            time.sleep(5)
                            os.system('cd ./' + cmd_list[4] + '-ios; xcodebuild archive -scheme ' + cmd_list[4] + ' -sdk iphoneos -allowProvisioningUpdates -archivePath ' + cmd_list[4] + '.xcarchive')
                            print(Fore.GREEN)
                            print('Converting to .ipa file...')
                            print(Fore.WHITE)
                            time.sleep(10)
                            os.system('cd ./' + cmd_list[4] + '-ios/*.xcarchive/Products/Applications; mkdir -p Payload; mv ' + cmd_list[4] + '.app Payload; zip -qr ' + cmd_list[6] + ' Payload; rm -r Payload')
                            print(Fore.GREEN)
                            print('DONE!', Style.BRIGHT)
                            print(Fore.WHITE)
                        elif cmd_list[5] == '-forsim':
                            if cmd_list[7] == '-m':
                                if cmd_list[9]:
                                    if cmd_list[10] == '&&':
                                        if cmd_list[11] == 'foxdeploy' and cmd_list[13] == '-launch':
                                            print(Fore.GREEN)
                                            print('Building xcode project...', Style.BRIGHT)
                                            print(Fore.WHITE)
                                            time.sleep(5)
                                            os.system('cd ~/' + cmd_list[4] + '-ios; xcodebuild -scheme ' + cmd_list[4] + ' -destination \"name=' + cmd_list[6] + ' ' + cmd_list[8] + '\" build; find /Users/Tema/Library/Developer/Xcode/DerivedData -iname \"' + cmd_list[4] + '.app\" -exec ios-sim launch {} --devicetypeid ' + cmd_list[15] + ' \;')
                                            print(Fore.GREEN)
                                            print('DONE!', Style.BRIGHT)
                                            print(Fore.WHITE)
                                        elif cmd_list[11] == 'foxdeploy' and cmd_list[13] == '-install':
                                            print(Fore.GREEN)
                                            print('Building xcode project...', Style.BRIGHT)
                                            print(Fore.WHITE)
                                            time.sleep(5)
                                            os.system('cd ~/' + cmd_list[4] + '-ios; xcodebuild -scheme ' + cmd_list[4] + ' -destination \"name=' + cmd_list[6] + ' ' + cmd_list[8] + '\" build; find /Users/Tema/Library/Developer/Xcode/DerivedData -iname \"' + cmd_list[4] + '.app\" -exec ios-sim -install {} --devicetypeid ' + cmd_list[15] + ' \;')
                                            print(Fore.GREEN)
                                            print('DONE!', Style.BRIGHT)
                                            print(Fore.WHITE)
                                    else:
                                        print(Fore.GREEN)
                                        print('Building xcode project...', Style.BRIGHT)
                                        print(Fore.WHITE)
                                        time.sleep(5)
                                        os.system('cd ~/' + cmd_list[4] + '-ios; xcodebuild -scheme ' + cmd_list[4] + ' -destination \"name=' + cmd_list[6] + ' ' + cmd_list[8] + '\" build; find /Users/Tema/Library/Developer/Xcode/DerivedData -iname \"' + cmd_list[4] + '.app\" -exec mv {} ' + cmd_list[10] + ' \;')
                                        print(Fore.GREEN)
                                        print('DONE!', Style.BRIGHT)
                                        print(Fore.WHITE)
                                

        elif cmd_list[0] == 'python-project':
            if cmd_list[1] == '-sub':
                if cmd_list[2] == 'android':
                    print('')
                    print('Subscribing...')
                    time.sleep(3)
                    print(Fore.GREEN)
                    print('Your project was successfully subscribed for android SDK!', Style.BRIGHT)
                    print(Fore.WHITE)
                elif cmd_list[2] == 'ios':
                    print('')
                    print('Subscribing...')
                    time.sleep(3)
                    print(Fore.GREEN)
                    print('Your project was successfully subscribed for xcode IOS SDK!', Style.BRIGHT)
                    print(Fore.WHITE)
        elif cmd_list[0] == 'foxadb':
            if cmd_list[1] == 'device':
                if cmd_list[2] == '-connect':
                    time.sleep(5)
                    print(Fore.GREEN)
                    print('Your device was successfully connected and will be rebooted in 10 seconds!', Style.BRIGHT)
                    print(Fore.WHITE)
                    time.sleep(10)
                    os.system('/Users/tema/.buildozer/android/platform/android-sdk/platform-tools/adb reboot')
                elif cmd_list[2] == '-push':
                    if cmd_list[3] == '.':
                        os.system('/Users/tema/.buildozer/android/platform/android-sdk/platform-tools/adb install ./bin/*.apk')

        elif cmd_list[0] == 'start':
            if cmd_list[1] == '-sdk-debug':
                if cmd_list[2]== 'android-sdk':
                    if cmd_list[3] == '-a':
                        if cmd_list[4] == 'buildozer':
                            os.system('buildozer android debug')
                elif cmd_list[2]== 'xcproject':
                    if cmd_list[3] == '-a':
                        if cmd_list[4] == 'toolchain':
                            buildcmd = 'python3 ~/foxhunt/kivy-ios/toolchain.py build ' + ' '.join(toolchain_addict)
                            os.system(buildcmd)
        elif cmd_list[0] == 'foxdeploy':
            if cmd_list[1] == '-iosdevice':
                if cmd_list[2] == '-install':
                    os.system('ios-deploy --debug --bundle ' + cmd_list[3])
                elif cmd_list[2] == '-detect':
                    os.system('ios-deploy --detect')
            elif cmd_list[1] == '-simulator':
                if cmd_list[2] == '-list':
                    os.system('ios-sim showdevicetypes')
                elif cmd_list[2] == '-install':
                    if cmd_list[4] == '--devicetype':
                        os.system('ios-sim install ' + cmd_list[3] + ' --devicetypeid ' + cmd_list[5])
                elif cmd_list[2] == '-start':
                    if cmd_list[3] == '--devicetype':
                        os.system('ios-sim start --devicetypeid ' + cmd_list[5])
                elif cmd_list[2] == '-launch':
                    if cmd_list[4] == '--devicetype':
                        os.system('ios-sim launch ' + cmd_list[3] + ' --devicetypeid ' + cmd_list[5])

        elif cmd_list[0] == 'exit':
            isRunning = False


def main():
    main_arg = sys.argv[1:]

    if main_arg[0] == 'init':
        init()
    else:
        print('Wrong command!')

    
try:
    main()
except IndexError:
    print('foxshell: no command')
